name: Build NodeJS app
on: push

jobs:
  build-project:
    name: Build project
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: npm i

      - name: Extract version
        id: extract_version
        uses: Saionaro/extract-package-version@v1.2.1
      # From now you can access the version
      - name: Print version
        run: echo ${{ steps.extract_version.outputs.version }}
      - name: Get Release Info
        id: get_release
        run: |
          response=$(curl -L -s \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/releases/tags/v${{ steps.extract_version.outputs.version }})
          echo "$response" > release_info.json
          ID=$(echo "$response" | jq -r '.id')
          echo "ID=$ID" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Display Release Info
        run: |
          cat release_info.json
          echo "Release ID: $ID"

      - name: Build project assets
        run: npm run build

      - name: Create and Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: static-site
          path: dist

      - name: Archive site content
        uses: thedoctor0/zip-release@master
        with:
          filename: site.zip
          path: dist

      - name: Upload Release Asset
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Content-Type: application/zip" \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/$ID/assets?name=site-v${{ steps.extract_version.outputs.version }}.zip" \
            --data-binary "@site.zip"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}